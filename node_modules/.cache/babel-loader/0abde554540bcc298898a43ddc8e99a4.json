{"ast":null,"code":"import _slicedToArray from\"/Users/suho/TeamProject/Spring/projectFinal/tripass/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import emailjs from\"emailjs-com\";import styles from\"./Subscribe.module.scss\";import{Button}from\"../../elements\";export default(function(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),sending=_useState2[0],setSending=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var templateParams={email:email,request:\"Subscription\"};var validateEmail=function validateEmail(email){var re=/\\S+@\\S+\\.\\S+/;return re.test(email);};var onSubmit=function onSubmit(){if(!validateEmail(email)){setStatus(\"Incorrect email address\");return;}setSending(true);emailjs.send(\"SERVICE ID\",\"TEMPLATE ID\",templateParams,\"USER ID\").then(function(response){setSending(false);setStatus(\"Your message has been sent!\");},function(err){setSending(false);setStatus(\"Sorry. There is an error: \"+err.text);});setEmail(\"\");};return/*#__PURE__*/React.createElement(\"form\",{className:styles.subscribe},/*#__PURE__*/React.createElement(\"span\",{className:styles.status},sending?\"Sending... \":status),/*#__PURE__*/React.createElement(\"input\",{value:email,onChange:function onChange(e){return setEmail(e.target.value);},type:\"text\",placeholder:\"Your email address\"}),/*#__PURE__*/React.createElement(Button,{click:onSubmit,hoverType:\"solid-color-tb\",before:\"\\uF105\"}));});","map":{"version":3,"sources":["/Users/suho/TeamProject/Spring/projectFinal/tripass/react/src/components/elements/Subscribe/Subscribe.js"],"names":["React","useState","emailjs","styles","Button","sending","setSending","status","setStatus","email","setEmail","templateParams","request","validateEmail","re","test","onSubmit","send","then","response","err","text","subscribe","e","target","value"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,aAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAASC,MAAT,KAAuB,gBAAvB,CAEA,eAAe,UAAM,eACWH,QAAQ,CAAC,KAAD,CADnB,wCACZI,OADY,eACHC,UADG,8BAESL,QAAQ,CAAC,EAAD,CAFjB,yCAEZM,MAFY,eAEJC,SAFI,8BAIOP,QAAQ,CAAC,EAAD,CAJf,yCAIZQ,KAJY,eAILC,QAJK,eAMnB,GAAMC,CAAAA,cAAc,CAAG,CACrBF,KAAK,CAAEA,KADc,CAErBG,OAAO,CAAE,cAFY,CAAvB,CAKA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACJ,KAAD,CAAW,CAC/B,GAAIK,CAAAA,EAAE,CAAG,cAAT,CACA,MAAOA,CAAAA,EAAE,CAACC,IAAH,CAAQN,KAAR,CAAP,CACD,CAHD,CAKA,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAI,CAACH,aAAa,CAACJ,KAAD,CAAlB,CAA2B,CACzBD,SAAS,CAAC,yBAAD,CAAT,CACA,OACD,CAEDF,UAAU,CAAC,IAAD,CAAV,CACAJ,OAAO,CACJe,IADH,CACQ,YADR,CACsB,aADtB,CACqCN,cADrC,CACqD,SADrD,EAEGO,IAFH,CAGI,SAACC,QAAD,CAAc,CACZb,UAAU,CAAC,KAAD,CAAV,CACAE,SAAS,CAAC,6BAAD,CAAT,CACD,CANL,CAOI,SAACY,GAAD,CAAS,CACPd,UAAU,CAAC,KAAD,CAAV,CACAE,SAAS,CAAC,6BAA+BY,GAAG,CAACC,IAApC,CAAT,CACD,CAVL,EAYAX,QAAQ,CAAC,EAAD,CAAR,CACD,CApBD,CAsBA,mBACE,4BAAM,SAAS,CAAEP,MAAM,CAACmB,SAAxB,eACE,4BAAM,SAAS,CAAEnB,MAAM,CAACI,MAAxB,EAAiCF,OAAO,CAAG,aAAH,CAAmBE,MAA3D,CADF,cAEE,6BACE,KAAK,CAAEE,KADT,CAEE,QAAQ,CAAE,kBAACc,CAAD,QAAOb,CAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAFZ,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,oBAJd,EAFF,cAQE,oBAAC,MAAD,EAAQ,KAAK,CAAET,QAAf,CAAyB,SAAS,CAAC,gBAAnC,CAAoD,MAAM,CAAC,QAA3D,EARF,CADF,CAYD,CAlDD","sourcesContent":["import React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport styles from \"./Subscribe.module.scss\";\nimport { Button } from \"../../elements\";\n\nexport default () => {\n  const [sending, setSending] = useState(false);\n  const [status, setStatus] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n\n  const templateParams = {\n    email: email,\n    request: \"Subscription\",\n  };\n\n  const validateEmail = (email) => {\n    var re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const onSubmit = () => {\n    if (!validateEmail(email)) {\n      setStatus(\"Incorrect email address\");\n      return;\n    }\n\n    setSending(true);\n    emailjs\n      .send(\"SERVICE ID\", \"TEMPLATE ID\", templateParams, \"USER ID\")\n      .then(\n        (response) => {\n          setSending(false);\n          setStatus(\"Your message has been sent!\");\n        },\n        (err) => {\n          setSending(false);\n          setStatus(\"Sorry. There is an error: \" + err.text);\n        }\n      );\n    setEmail(\"\");\n  };\n\n  return (\n    <form className={styles.subscribe}>\n      <span className={styles.status}>{sending ? \"Sending... \" : status}</span>\n      <input\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        type=\"text\"\n        placeholder=\"Your email address\"\n      />\n      <Button click={onSubmit} hoverType=\"solid-color-tb\" before=\"&#xf105;\" />\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}