{"ast":null,"code":"import _slicedToArray from \"/Users/suho/TeamProject/Spring/projectFinal/tripass/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/suho/TeamProject/Spring/projectFinal/tripass/react/src/webapp/cmm/elements/Pagination/Pagination.jsx\";\n\nimport { Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styles from './Pagination.module.scss';\nexport default (function (_ref) {\n  var pageCount = _ref.pageCount,\n      pageNum = _ref.pageNum,\n      setPage = _ref.setPage,\n      blockSize = _ref.blockSize;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentBlock = _useState2[0],\n      setCurrentBlock = _useState2[1];\n\n  var blockCount = Math.ceil(pageCount / blockSize);\n  var arr = [];\n\n  var _loop = function _loop(i) {\n    if (i > pageCount) return \"break\";\n    arr.push( /*#__PURE__*/React.createElement(\"li\", {\n      className: i === pageNum ? styles.active : \"false\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: styles.page,\n      onClick: function onClick() {\n        setPage(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, i)));\n  };\n\n  for (var i = (currentBlock - 1) * blockSize + 1; i <= currentBlock * blockSize; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paging,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, currentBlock !== 1 && /*#__PURE__*/React.createElement(Button, {\n    className: styles.block,\n    onClick: function onClick() {\n      setCurrentBlock(function (b) {\n        return b - 1;\n      });\n      setPage((currentBlock - 1) * blockSize);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 36\n    }\n  }, \"\\uC774\\uC804\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, arr), currentBlock !== blockCount && /*#__PURE__*/React.createElement(Button, {\n    className: styles.block,\n    onClick: function onClick() {\n      setCurrentBlock(function (b) {\n        return b + 1;\n      });\n      setPage(currentBlock * blockSize + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 45\n    }\n  }, \"\\uB2E4\\uC74C\")));\n});","map":{"version":3,"sources":["/Users/suho/TeamProject/Spring/projectFinal/tripass/react/src/webapp/cmm/elements/Pagination/Pagination.jsx"],"names":["Button","React","useState","styles","pageCount","pageNum","setPage","blockSize","currentBlock","setCurrentBlock","blockCount","Math","ceil","arr","i","push","active","page","paging","block","b"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,gBAAe,gBAAgD;AAAA,MAA7CC,SAA6C,QAA7CA,SAA6C;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACnBL,QAAQ,CAAC,CAAD,CADW;AAAA;AAAA,MACpDM,YADoD;AAAA,MACtCC,eADsC;;AAE3D,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUR,SAAS,GAAGG,SAAtB,CAAnB;AACA,MAAMM,GAAG,GAAG,EAAZ;;AAH2D,6BAKlDC,CALkD;AAMvD,QAAIA,CAAC,GAAGV,SAAR,EAAmB;AACnBS,IAAAA,GAAG,CAACE,IAAJ,eACI;AAAI,MAAA,SAAS,EAAED,CAAC,KAAKT,OAAN,GAAgBF,MAAM,CAACa,MAAvB,GAAgC,OAA/C;AAAwD,MAAA,GAAG,EAAEF,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEX,MAAM,CAACc,IAA1B;AAAgC,MAAA,OAAO,EAAE,mBAAM;AAAEX,QAAAA,OAAO,CAACQ,CAAD,CAAP;AAAY,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgEA,CAAhE,CADJ,CADJ;AAPuD;;AAK3D,OAAK,IAAIA,CAAC,GAAG,CAACN,YAAY,GAAG,CAAhB,IAAqBD,SAArB,GAAiC,CAA9C,EAAiDO,CAAC,IAAIN,YAAY,GAAGD,SAArE,EAAgFO,CAAC,EAAjF,EAAqF;AAAA,qBAA5EA,CAA4E;;AAAA,0BAC9D;AAIP;;AAChB,sBAAO,uDACH;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACe,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,YAAY,KAAK,CAAjB,iBAAsB,oBAAC,MAAD;AACnB,IAAA,SAAS,EAAEL,MAAM,CAACgB,KADC;AAEnB,IAAA,OAAO,EAAE,mBAAM;AACXV,MAAAA,eAAe,CAAC,UAAAW,CAAC;AAAA,eAAIA,CAAC,GAAG,CAAR;AAAA,OAAF,CAAf;AACAd,MAAAA,OAAO,CAAC,CAACE,YAAY,GAAG,CAAhB,IAAqBD,SAAtB,CAAP;AACH,KALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD3B,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,GADL,CARJ,EAWKL,YAAY,KAAKE,UAAjB,iBAA+B,oBAAC,MAAD;AAC5B,IAAA,SAAS,EAAEP,MAAM,CAACgB,KADU;AAE5B,IAAA,OAAO,EAAE,mBAAM;AACXV,MAAAA,eAAe,CAAC,UAAAW,CAAC;AAAA,eAAIA,CAAC,GAAG,CAAR;AAAA,OAAF,CAAf;AACAd,MAAAA,OAAO,CAAEE,YAAD,GAAiBD,SAAjB,GAA6B,CAA9B,CAAP;AACH,KAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXpC,CADG,CAAP;AAoBW,CA/Bf","sourcesContent":["import { Button } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport styles from './Pagination.module.scss'\n\nexport default ({ pageCount, pageNum, setPage, blockSize }) => {\n    const [currentBlock, setCurrentBlock] = useState(1)\n    const blockCount = Math.ceil(pageCount / blockSize)\n    const arr = []\n\n    for (let i = (currentBlock - 1) * blockSize + 1; i <= currentBlock * blockSize; i++) {\n        if (i > pageCount) break\n        arr.push(\n            <li className={i === pageNum ? styles.active : \"false\"} key={i}>\n                <Button className={styles.page} onClick={() => { setPage(i) }}>{i}</Button>\n            </li> )}\n    return <>\n        <div className={styles.paging}>\n            {currentBlock !== 1 && <Button\n                className={styles.block}\n                onClick={() => {\n                    setCurrentBlock(b => b - 1)\n                    setPage((currentBlock - 1) * blockSize)\n                }}\n            >이전</Button>}\n            <ul>\n                {arr}\n            </ul>\n            {currentBlock !== blockCount && <Button\n                className={styles.block}\n                onClick={() => {\n                    setCurrentBlock(b => b + 1)\n                    setPage((currentBlock) * blockSize + 1)\n                }}\n            >다음</Button>}\n        </div>\n           </>}"]},"metadata":{},"sourceType":"module"}