{"ast":null,"code":"import _toConsumableArray from\"/Users/suho/TeamProject/Spring/projectFinal/tripass/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/suho/TeamProject/Spring/projectFinal/tripass/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,Fragment}from\"react\";import{SpringGrid,enterExitStyle}from\"react-stonecutter\";import{Link}from\"react-router-dom\";import useCurrentWidth from\"../../../utilities/useCurrentWidth\";import useHover from\"../../../utilities/useHover\";import styles from\"./Portfolio2.module.scss\";import THEME from\"../../../state/theme\";export default(function(_ref){var _Array$prototype;var _ref$data=_ref.data,data=_ref$data===void 0?[]:_ref$data;// Active category (start with all)\nvar _useState=useState(\"All Projects\"),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];// Width of single portfolio item, calculation based on screen size\nvar width=useCurrentWidth();var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),itemWidth=_useState4[0],setItemWidth=_useState4[1];useEffect(function(){switch(true){case width>1920:setItemWidth(width/5);break;case width>992:setItemWidth(width/4);break;case width>768:setItemWidth(width/3);break;case width>576:setItemWidth(width/2);break;default:setItemWidth(width);break;}},[width]);//------------------------------------------------------------\n// Animation styles for masonry component\nvar _enterExitStyle$simpl=enterExitStyle.simple,enter=_enterExitStyle$simpl.enter,entered=_enterExitStyle$simpl.entered,exit=_enterExitStyle$simpl.exit;// Take category tags from every item in database, and make array with unique values\nvar categories=_toConsumableArray(new Set((_Array$prototype=Array.prototype).concat.apply(_Array$prototype,_toConsumableArray(data.map(function(item){return item.cats.split(\" \").map(function(cat){return cat;});})))));// Creating array of jsx items for masonry grid\nvar portfolioList=shuffleArray(data.filter(function(item){return item.cats.includes(active)||active===\"All Projects\";}).map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,style:{width:itemWidth,height:width>576?itemWidth:itemWidth/1.5}},/*#__PURE__*/React.createElement(\"div\",{className:styles.item},/*#__PURE__*/React.createElement(\"img\",{src:item.img,alt:\"portfolio\"}),/*#__PURE__*/React.createElement(\"div\",{className:styles.project_description},/*#__PURE__*/React.createElement(Link,{to:\"/portfolio/\"+item.id},/*#__PURE__*/React.createElement(\"h3\",null,item.title)),/*#__PURE__*/React.createElement(\"p\",{style:{color:THEME.color}},item.cats))));}).splice(0,useCurrentWidth()>576?8:4));// Randomizing array every time component re-rendering for better animation\nfunction shuffleArray(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array;}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:[\"layout-header\",styles.header].join(\" \")},/*#__PURE__*/React.createElement(\"span\",{className:\"subtitle\",style:{color:THEME.color}},\"Our Portfolio\"),/*#__PURE__*/React.createElement(\"h2\",null,\"We proud to show you some famous projects.\"),/*#__PURE__*/React.createElement(\"p\",null,\"Energistically predominate high-payoff alignments whereas maintainable materials timely deliverables. Synergistically leverage other's holistic mindshare via high-payoff expertise.\")),/*#__PURE__*/React.createElement(\"div\",{className:styles.portfolio},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(Button,{key:\"all_projects\",item:\"All Projects\",active:active,setActive:setActive}),categories.map(function(item,index){return/*#__PURE__*/React.createElement(Button,{key:index,item:item,active:active,setActive:setActive});})),/*#__PURE__*/React.createElement(SpringGrid,{component:\"ol\",columns:window.outerWidth/itemWidth,columnWidth:itemWidth,itemHeight:width>576?itemWidth:itemWidth/1.5,enter:enter,entered:entered,exit:exit,springConfig:{stiffness:170,damping:26}},portfolioList)));});var Button=function Button(_ref2){var item=_ref2.item,active=_ref2.active,setActive=_ref2.setActive;var _useHover=useHover(),_useHover2=_slicedToArray(_useHover,2),hoverRef=_useHover2[0],isHovered=_useHover2[1];return/*#__PURE__*/React.createElement(\"li\",{ref:hoverRef,onClick:function onClick(){return setActive(item);},className:active===item?styles.active:null,style:{color:active===item||isHovered?THEME.color:null,borderColor:active===item&&THEME.color}},item);};","map":{"version":3,"sources":["/Users/suho/TeamProject/Spring/projectFinal/tripass/react/src/components/widgets/Portfolio2/Portfolio2.js"],"names":["React","useState","useEffect","Fragment","SpringGrid","enterExitStyle","Link","useCurrentWidth","useHover","styles","THEME","data","active","setActive","width","itemWidth","setItemWidth","simple","enter","entered","exit","categories","Set","Array","prototype","concat","map","item","cats","split","cat","portfolioList","shuffleArray","filter","includes","index","height","img","project_description","id","title","color","splice","array","i","length","j","Math","floor","random","temp","header","join","portfolio","window","outerWidth","stiffness","damping","Button","hoverRef","isHovered","borderColor"],"mappings":"wWAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CACA,OAASC,UAAT,CAAqBC,cAArB,KAA2C,mBAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oCAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CAEA,eAAe,cAAmB,yCAAhBC,IAAgB,CAAhBA,IAAgB,oBAAT,EAAS,WAChC;AADgC,cAEJV,QAAQ,CAAC,cAAD,CAFJ,wCAEzBW,MAFyB,eAEjBC,SAFiB,eAIhC;AACA,GAAMC,CAAAA,KAAK,CAAGP,eAAe,EAA7B,CALgC,eAMEN,QAAQ,CAAC,CAAD,CANV,yCAMzBc,SANyB,eAMdC,YANc,eAOhCd,SAAS,CAAC,UAAM,CACd,OAAQ,IAAR,EACE,IAAKY,CAAAA,KAAK,CAAG,IAAb,CACEE,YAAY,CAACF,KAAK,CAAG,CAAT,CAAZ,CACA,MACF,IAAKA,CAAAA,KAAK,CAAG,GAAb,CACEE,YAAY,CAACF,KAAK,CAAG,CAAT,CAAZ,CACA,MACF,IAAKA,CAAAA,KAAK,CAAG,GAAb,CACEE,YAAY,CAACF,KAAK,CAAG,CAAT,CAAZ,CACA,MACF,IAAKA,CAAAA,KAAK,CAAG,GAAb,CACEE,YAAY,CAACF,KAAK,CAAG,CAAT,CAAZ,CACA,MACF,QACEE,YAAY,CAACF,KAAD,CAAZ,CACA,MAfJ,CAiBD,CAlBQ,CAkBN,CAACA,KAAD,CAlBM,CAAT,CAmBA;AAEA;AA5BgC,0BA6BCT,cAAc,CAACY,MA7BhB,CA6BxBC,KA7BwB,uBA6BxBA,KA7BwB,CA6BjBC,OA7BiB,uBA6BjBA,OA7BiB,CA6BRC,IA7BQ,uBA6BRA,IA7BQ,CA+BhC;AACA,GAAMC,CAAAA,UAAU,oBACX,GAAIC,CAAAA,GAAJ,CACD,kBAAAC,KAAK,CAACC,SAAN,EAAgBC,MAAhB,2CACKd,IAAI,CAACe,GAAL,CAAS,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBH,GAArB,CAAyB,SAACI,GAAD,QAASA,CAAAA,GAAT,EAAzB,CAAV,EAAT,CADL,EADC,CADW,CAAhB,CAQA;AACA,GAAMC,CAAAA,aAAa,CAAGC,YAAY,CAChCrB,IAAI,CACDsB,MADH,CACU,SAACN,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,CAAUM,QAAV,CAAmBtB,MAAnB,GAA8BA,MAAM,GAAK,cAAnD,EADV,EAEGc,GAFH,CAEO,SAACC,IAAD,CAAOQ,KAAP,qBACH,2BACE,GAAG,CAAEA,KADP,CAEE,KAAK,CAAE,CACLrB,KAAK,CAAEC,SADF,CAELqB,MAAM,CAAEtB,KAAK,CAAG,GAAR,CAAcC,SAAd,CAA0BA,SAAS,CAAG,GAFzC,CAFT,eAOE,2BAAK,SAAS,CAAEN,MAAM,CAACkB,IAAvB,eACE,2BAAK,GAAG,CAAEA,IAAI,CAACU,GAAf,CAAoB,GAAG,CAAC,WAAxB,EADF,cAEE,2BAAK,SAAS,CAAE5B,MAAM,CAAC6B,mBAAvB,eACE,oBAAC,IAAD,EAAM,EAAE,CAAE,cAAgBX,IAAI,CAACY,EAA/B,eACE,8BAAKZ,IAAI,CAACa,KAAV,CADF,CADF,cAIE,yBAAG,KAAK,CAAE,CAAEC,KAAK,CAAE/B,KAAK,CAAC+B,KAAf,CAAV,EAAmCd,IAAI,CAACC,IAAxC,CAJF,CAFF,CAPF,CADG,EAFP,EAqBGc,MArBH,CAqBU,CArBV,CAqBanC,eAAe,GAAK,GAApB,CAA0B,CAA1B,CAA8B,CArB3C,CADgC,CAAlC,CAyBA;AACA,QAASyB,CAAAA,YAAT,CAAsBW,KAAtB,CAA6B,CAC3B,IAAK,GAAIC,CAAAA,CAAC,CAAGD,KAAK,CAACE,MAAN,CAAe,CAA5B,CAA+BD,CAAC,CAAG,CAAnC,CAAsCA,CAAC,EAAvC,CAA2C,CACzC,GAAIE,CAAAA,CAAC,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBL,CAAC,CAAG,CAArB,CAAX,CAAR,CACA,GAAIM,CAAAA,IAAI,CAAGP,KAAK,CAACC,CAAD,CAAhB,CACAD,KAAK,CAACC,CAAD,CAAL,CAAWD,KAAK,CAACG,CAAD,CAAhB,CACAH,KAAK,CAACG,CAAD,CAAL,CAAWI,IAAX,CACD,CAED,MAAOP,CAAAA,KAAP,CACD,CAED,mBACE,oBAAC,QAAD,mBACE,2BAAK,SAAS,CAAE,CAAC,eAAD,CAAkBlC,MAAM,CAAC0C,MAAzB,EAAiCC,IAAjC,CAAsC,GAAtC,CAAhB,eACE,4BAAM,SAAS,CAAC,UAAhB,CAA2B,KAAK,CAAE,CAAEX,KAAK,CAAE/B,KAAK,CAAC+B,KAAf,CAAlC,kBADF,cAIE,2EAJF,cAKE,oNALF,CADF,cAYE,2BAAK,SAAS,CAAEhC,MAAM,CAAC4C,SAAvB,eACE,2CACE,oBAAC,MAAD,EACE,GAAG,CAAC,cADN,CAEE,IAAI,CAAC,cAFP,CAGE,MAAM,CAAEzC,MAHV,CAIE,SAAS,CAAEC,SAJb,EADF,CAOGQ,UAAU,CAACK,GAAX,CAAe,SAACC,IAAD,CAAOQ,KAAP,qBACd,oBAAC,MAAD,EACE,GAAG,CAAEA,KADP,CAEE,IAAI,CAAER,IAFR,CAGE,MAAM,CAAEf,MAHV,CAIE,SAAS,CAAEC,SAJb,EADc,EAAf,CAPH,CADF,cAiBE,oBAAC,UAAD,EACE,SAAS,CAAC,IADZ,CAEE,OAAO,CAAEyC,MAAM,CAACC,UAAP,CAAoBxC,SAF/B,CAGE,WAAW,CAAEA,SAHf,CAIE,UAAU,CAAED,KAAK,CAAG,GAAR,CAAcC,SAAd,CAA0BA,SAAS,CAAG,GAJpD,CAKE,KAAK,CAAEG,KALT,CAME,OAAO,CAAEC,OANX,CAOE,IAAI,CAAEC,IAPR,CAQE,YAAY,CAAE,CAAEoC,SAAS,CAAE,GAAb,CAAkBC,OAAO,CAAE,EAA3B,CARhB,EAUG1B,aAVH,CAjBF,CAZF,CADF,CA6CD,CA3HD,EA6HA,GAAM2B,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,OAAiC,IAA9B/B,CAAAA,IAA8B,OAA9BA,IAA8B,CAAxBf,MAAwB,OAAxBA,MAAwB,CAAhBC,SAAgB,OAAhBA,SAAgB,eAChBL,QAAQ,EADQ,wCACvCmD,QADuC,eAC7BC,SAD6B,eAG9C,mBACE,0BACE,GAAG,CAAED,QADP,CAEE,OAAO,CAAE,yBAAM9C,CAAAA,SAAS,CAACc,IAAD,CAAf,EAFX,CAGE,SAAS,CAAEf,MAAM,GAAKe,IAAX,CAAkBlB,MAAM,CAACG,MAAzB,CAAkC,IAH/C,CAIE,KAAK,CAAE,CACL6B,KAAK,CAAE7B,MAAM,GAAKe,IAAX,EAAmBiC,SAAnB,CAA+BlD,KAAK,CAAC+B,KAArC,CAA6C,IAD/C,CAELoB,WAAW,CAAEjD,MAAM,GAAKe,IAAX,EAAmBjB,KAAK,CAAC+B,KAFjC,CAJT,EASGd,IATH,CADF,CAaD,CAhBD","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { SpringGrid, enterExitStyle } from \"react-stonecutter\";\nimport { Link } from \"react-router-dom\";\nimport useCurrentWidth from \"../../../utilities/useCurrentWidth\";\nimport useHover from \"../../../utilities/useHover\";\nimport styles from \"./Portfolio2.module.scss\";\nimport THEME from \"../../../state/theme\";\n\nexport default ({ data = [] }) => {\n  // Active category (start with all)\n  const [active, setActive] = useState(\"All Projects\");\n\n  // Width of single portfolio item, calculation based on screen size\n  const width = useCurrentWidth();\n  const [itemWidth, setItemWidth] = useState(0);\n  useEffect(() => {\n    switch (true) {\n      case width > 1920:\n        setItemWidth(width / 5);\n        break;\n      case width > 992:\n        setItemWidth(width / 4);\n        break;\n      case width > 768:\n        setItemWidth(width / 3);\n        break;\n      case width > 576:\n        setItemWidth(width / 2);\n        break;\n      default:\n        setItemWidth(width);\n        break;\n    }\n  }, [width]);\n  //------------------------------------------------------------\n\n  // Animation styles for masonry component\n  const { enter, entered, exit } = enterExitStyle.simple;\n\n  // Take category tags from every item in database, and make array with unique values\n  const categories = [\n    ...new Set(\n      Array.prototype.concat(\n        ...data.map((item) => item.cats.split(\" \").map((cat) => cat))\n      )\n    ),\n  ];\n\n  // Creating array of jsx items for masonry grid\n  const portfolioList = shuffleArray(\n    data\n      .filter((item) => item.cats.includes(active) || active === \"All Projects\")\n      .map((item, index) => (\n        <div\n          key={index}\n          style={{\n            width: itemWidth,\n            height: width > 576 ? itemWidth : itemWidth / 1.5,\n          }}\n        >\n          <div className={styles.item}>\n            <img src={item.img} alt=\"portfolio\" />\n            <div className={styles.project_description}>\n              <Link to={\"/portfolio/\" + item.id}>\n                <h3>{item.title}</h3>\n              </Link>\n              <p style={{ color: THEME.color }}>{item.cats}</p>\n            </div>\n          </div>\n        </div>\n      ))\n      .splice(0, useCurrentWidth() > 576 ? 8 : 4)\n  );\n\n  // Randomizing array every time component re-rendering for better animation\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  return (\n    <Fragment>\n      <div className={[\"layout-header\", styles.header].join(\" \")}>\n        <span className=\"subtitle\" style={{ color: THEME.color }}>\n          Our Portfolio\n        </span>\n        <h2>We proud to show you some famous projects.</h2>\n        <p>\n          Energistically predominate high-payoff alignments whereas maintainable\n          materials timely deliverables. Synergistically leverage other's\n          holistic mindshare via high-payoff expertise.\n        </p>\n      </div>\n      <div className={styles.portfolio}>\n        <ul>\n          <Button\n            key=\"all_projects\"\n            item=\"All Projects\"\n            active={active}\n            setActive={setActive}\n          />\n          {categories.map((item, index) => (\n            <Button\n              key={index}\n              item={item}\n              active={active}\n              setActive={setActive}\n            />\n          ))}\n        </ul>\n        <SpringGrid\n          component=\"ol\"\n          columns={window.outerWidth / itemWidth}\n          columnWidth={itemWidth}\n          itemHeight={width > 576 ? itemWidth : itemWidth / 1.5}\n          enter={enter}\n          entered={entered}\n          exit={exit}\n          springConfig={{ stiffness: 170, damping: 26 }}\n        >\n          {portfolioList}\n        </SpringGrid>\n      </div>\n    </Fragment>\n  );\n};\n\nconst Button = ({ item, active, setActive }) => {\n  const [hoverRef, isHovered] = useHover();\n\n  return (\n    <li\n      ref={hoverRef}\n      onClick={() => setActive(item)}\n      className={active === item ? styles.active : null}\n      style={{\n        color: active === item || isHovered ? THEME.color : null,\n        borderColor: active === item && THEME.color,\n      }}\n    >\n      {item}\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}